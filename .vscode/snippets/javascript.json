{
  "Next.js Page Component": {
    "prefix": "nextpage",
    "body": [
      "import { NextPage } from 'next';",
      "import Head from 'next/head';",
      "",
      "const ${1:PageName}: NextPage = () => {",
      "  return (",
      "    <>",
      "      <Head>",
      "        <title>${2:Page Title} | RAGESTATE</title>",
      "        <meta name=\"description\" content=\"${3:Page description}\" />",
      "      </Head>",
      "      <main className=\"container mx-auto px-4 py-8\">",
      "        $0",
      "      </main>",
      "    </>",
      "  );",
      "};",
      "",
      "export default ${1:PageName};"
    ],
    "description": "Create a new Next.js page component"
  },
  "Three.js Component": {
    "prefix": "threecomponent",
    "body": [
      "import { useRef, useState } from 'react';",
      "import { Canvas, useFrame } from '@react-three/fiber';",
      "import { OrbitControls } from '@react-three/drei';",
      "",
      "function ${1:ModelName}() {",
      "  const meshRef = useRef();",
      "  const [hovered, setHover] = useState(false);",
      "  ",
      "  useFrame(() => {",
      "    if (meshRef.current) {",
      "      meshRef.current.rotation.y += 0.01;",
      "    }",
      "  });",
      "  ",
      "  return (",
      "    <mesh",
      "      ref={meshRef}",
      "      onPointerOver={() => setHover(true)}",
      "      onPointerOut={() => setHover(false)}",
      "    >",
      "      <boxGeometry args={[1, 1, 1]} />",
      "      <meshStandardMaterial color={hovered ? '#ff6b6b' : '#6b6bff'} />",
      "    </mesh>",
      "  );",
      "}",
      "",
      "export default function ${2:SceneName}() {",
      "  return (",
      "    <div className=\"w-full h-[500px]\">",
      "      <Canvas camera={{ position: [0, 0, 5], fov: 75 }}>",
      "        <ambientLight intensity={0.5} />",
      "        <spotLight position={[10, 10, 10]} angle={0.15} penumbra={1} />",
      "        <pointLight position={[-10, -10, -10]} />",
      "        <${1:ModelName} />",
      "        <OrbitControls />",
      "      </Canvas>",
      "    </div>",
      "  );",
      "}"
    ],
    "description": "Create a Three.js component with React Three Fiber"
  },
  "Firebase Auth Hook": {
    "prefix": "usefireauth",
    "body": [
      "import { useState, useEffect } from 'react';",
      "import { getAuth, onAuthStateChanged, User } from 'firebase/auth';",
      "",
      "export function useAuth() {",
      "  const [user, setUser] = useState<User | null>(null);",
      "  const [loading, setLoading] = useState(true);",
      "",
      "  useEffect(() => {",
      "    const auth = getAuth();",
      "    const unsubscribe = onAuthStateChanged(auth, (user) => {",
      "      setUser(user);",
      "      setLoading(false);",
      "    });",
      "",
      "    return () => unsubscribe();",
      "  }, []);",
      "",
      "  return { user, loading };",
      "}"
    ],
    "description": "Create a Firebase authentication hook"
  }
}
